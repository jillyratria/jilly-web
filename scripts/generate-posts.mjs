// scripts/generate-posts.mjs
import fs from "fs";
import path from "path";
import matter from "gray-matter";

const docsDir = path.join(process.cwd(), "docs");
const outDir = path.join(process.cwd(), "src", "generated");
const outFile = path.join(outDir, "posts.data.ts");

// 1) collect *.md files
const slugs = fs.readdirSync(docsDir).filter((f) => f.endsWith(".md"));

// 2) parse frontmatter + content
const posts = slugs.map((file) => {
  const slug = file.replace(/\.md$/, "");
  const fullPath = path.join(docsDir, file);
  const raw = fs.readFileSync(fullPath, "utf8");
  const { data, content } = matter(raw);
  return {
    ...data,
    slug,
    content,
  };
});

// 3) sort by date desc if available
posts.sort((a, b) => (a?.date > b?.date ? -1 : 1));

// 4) emit a TS module you can import at runtime (edge-safe)
fs.mkdirSync(outDir, { recursive: true });
fs.writeFileSync(
  outFile,
  `// AUTO-GENERATED by scripts/generate-posts.mjs â€” do not edit.
export const posts = ${JSON.stringify(posts, null, 2)} as const;
`
);

console.log(
  `Wrote ${posts.length} posts to ${path.relative(process.cwd(), outFile)}`
);
